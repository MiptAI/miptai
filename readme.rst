Коротко
=======

Сайт mipt.ai создан на основе генератора статических сайтов `Nikola <getnikola.com>`_.
Это позволяет использовать стандартные и знакомые многим технологии для наполнения сайта контентом:

* `reStructuredText <http://docutils.sourceforge.net/rst.html>`_ используется в качестве основного языка разметки для всех новостей, статей, туториалов, опубликованных на сайте.
  Также используется в таких популярных продуктах как `Sphinx <sphinx-doc.org>`_ и `Read the Docs <https://readthedocs.org/>`_.

* `Python <python.org>`_ используется для расширения функционала Nikola и его доработки для нужд mipt.ai.
  Второй по популярности язык программирования в мире.

* `Github <github.com>`_ используется для хранения всего исходного кода сайта.
  Причём "всего" включает в себя как контент, так и расширения для Nikola.
  А это значит, что можно не только добавлять контент и исправлять ошибки в уже существующем контенте, а повлиять на любой аспект функционирования сайта, используя принятый для многих open-source проектов `Github Flow <https://guides.github.com/introduction/flow/>`_.

* `Travis CI <travis-ci.org>`_ используется для сборки исходного кода и его публикации на **Github Pages** при любых изменениях, попадающих в основную ветку (src).

Если весь основной стек используемых технологий уже знаком, проще всего начать изучение с чтения исходного кода, структурированному по разным директориям.
Это достаточно приятное занятие, которое не займёт у вас много времени :).


Подробно
========


Разворачивание системы сборки
-----------------------------

Несмотря, на то что небольшие правки можно вносить через web-интерфейс Github, для полноценной работы и многих фишек, как live-preview рекомендуется развернуть среду необходимую для сборки сайта у себя на компьютере.
Установка клиента git и Python отличается для каждой операционной системы, уже хорошо описана много раз, поэтому не включена в настоящий документ.
Для установки Nikola и скачивания репозитория на свой компьютер необходимо выполнить следующие команды (для стандартного клиента git)::

  pip install 'Nikola[extras]'
  git clone git@github.com:MiptAI/miptai.github.io.git

Это позволит получить и развернуть все необходимое окружение для работы над сайтом.
После этого для сбора сайта необходимо выполнить следующие команды::

  cd miptai.github.io
  nikola build

После чего содержимое сайта будет находится и доступно для просмотра в директории ``output``.
Кроме непосредственно команды ``nikola build`` следующей по полезности командой является команда ``nikola auto``, позволяющая запустить live-preview сайта в браузере и автоматически обновлять его содержимое при изменении исходных файлов.
Более подробное руководство можно получить с помощью команды ``nikola help`` или в `Nikola Handbook <https://getnikola.com/handbook.html>`_.


Создание ветки и оформление PullRequest
---------------------------------------

Выполняются согласно Github Flow:

#. Для начала работы переключаемся на основную ветку и получаем актуальную версию репозитория::

     git checkout src && git pull

#. Создаём ветку с названием/кратким описанием предлагаемой доработки::

     git checkout -b feature/<feature_name>

#. Делаем необходимые изменения: создаём новые файлы или правим уже существующие.

#. Создаём коммит и отправляем его на Github::

     git add .
     git commit
     git push --set-upstream origin feature/<feature_name>

#. Заходим на `Github <https://github.com/MiptAI/miptai.github.io>`_ и через кнопку "New pull request" создаём новый pull-request с новыми изменениями.

#. Ждём, пока pull-request будет одобрен мейнтейнерами сайта, попадёт в основную ветку, автоматически соберётся и будет опубликован Travis CI.


Типы записей
------------

Каждая статья, которой оперирует Nikola, состоит из текста записи и некоторой мета-информации, находящейся в заголовке сайта.
Мета-информация немного отличается для каждого типа записей, чаще всего опциональна, но позволяет предоставить большее количество информации и улучшить опыт работы с сайтом для конечных пользователей.

Запись типа событие
~~~~~~~~~~~~~~~~~~~

.. code::

   .. title: название события (он же заголовок)
   .. date: дата публикации новости о событии, по этому полю осуществляется
            сортировка в списках "все события" и "архив событий"
   .. event_start: дата и время начала проведения события, по этому полю
                   осуществляется сортировка в списке предстоящих событий
   .. event_end: дата и время окончания события
   .. place: место проведения события
   .. description: краткое описание события, которое будет отображено в
                   списке предстоящих событий

   Текст подробно описывающий событие, который будет отображён на отдельной
   странице с событием.
